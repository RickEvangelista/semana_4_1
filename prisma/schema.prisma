generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model evento {
  id_evento          Int      @id @default(autoincrement())
  titulo             String   @unique(map: "titulo_UNIQUE") @db.VarChar(35)
  dt_inicio          DateTime @db.Date
  dt_termino         DateTime @db.Date
  localizacao        String   @db.VarChar(45)
  capacidade_total   Int
  capacidade_atual   Int
  criador_id_usuario Int?
  usuario            usuario? @relation(fields: [criador_id_usuario], references: [id_usuario], map: "fk_evento_usuario1")
  setor              setor[]

  @@index([criador_id_usuario], map: "fk_evento_usuario1_idx")
}

model ingresso {
  id_ingresso                                    Int               @id @default(autoincrement())
  codigo                                         String            @unique(map: "codigo_UNIQUE") @db.VarChar(6)
  nome_completo                                  String            @db.VarChar(100)
  email                                          String            @db.VarChar(45)
  cpf                                            String            @db.VarChar(11)
  situacao                                       ingresso_situacao @default(ativo)
  validador_id_usuario                           Int?
  criador_id_usuario                             Int?
  setor_id_setor                                 Int
  setor                                          setor             @relation(fields: [setor_id_setor], references: [id_setor], onDelete: Cascade, map: "fk_ingresso_setor1")
  usuario_ingresso_criador_id_usuarioTousuario   usuario?          @relation("ingresso_criador_id_usuarioTousuario", fields: [criador_id_usuario], references: [id_usuario], onUpdate: SetNull, map: "fk_ingresso_usuario1")
  usuario_ingresso_validador_id_usuarioTousuario usuario?          @relation("ingresso_validador_id_usuarioTousuario", fields: [validador_id_usuario], references: [id_usuario], onUpdate: SetNull, map: "fk_ingresso_usuario2")

  @@index([setor_id_setor], map: "fk_ingresso_setor1_idx")
  @@index([criador_id_usuario], map: "fk_ingresso_usuario1_idx")
  @@index([validador_id_usuario], map: "fk_ingresso_usuario2_idx")
}

model perfil {
  id_perfil Int       @id
  titulo    String    @unique(map: "titulo_UNIQUE") @db.VarChar(15)
  usuario   usuario[]
}

model setor {
  id_setor         Int        @id @default(autoincrement())
  titulo           String     @db.VarChar(20)
  capacidade_total Int
  capacidade_atual Int
  evento_id_evento Int
  ingresso         ingresso[]
  evento           evento     @relation(fields: [evento_id_evento], references: [id_evento], onDelete: Cascade, map: "fk_setor_evento1")

  @@index([evento_id_evento], map: "fk_setor_evento1_idx")
}

model usuario {
  id_usuario                                      Int        @id @default(autoincrement())
  nome_completo                                   String     @db.VarChar(100)
  email                                           String     @unique(map: "email_UNIQUE") @db.VarChar(45)
  cpf                                             String     @unique(map: "cpf_UNIQUE") @db.VarChar(11)
  senha                                           String     @db.VarChar(64)
  criador_id_usuario                              Int?
  perfil_id_perfil                                Int
  evento                                          evento[]
  ingresso_ingresso_criador_id_usuarioTousuario   ingresso[] @relation("ingresso_criador_id_usuarioTousuario")
  ingresso_ingresso_validador_id_usuarioTousuario ingresso[] @relation("ingresso_validador_id_usuarioTousuario")
  perfil                                          perfil     @relation(fields: [perfil_id_perfil], references: [id_perfil], onDelete: Cascade, map: "fk_usuario_perfil")
  usuario                                         usuario?   @relation("usuarioTousuario", fields: [criador_id_usuario], references: [id_usuario], onDelete: NoAction, onUpdate: SetNull, map: "fk_usuario_usuario1")
  other_usuario                                   usuario[]  @relation("usuarioTousuario")

  @@index([perfil_id_perfil], map: "fk_usuario_perfil_idx")
  @@index([criador_id_usuario], map: "fk_usuario_usuario1_idx")
}

enum ingresso_situacao {
  ativo
  utilizado
  cancelado
}
